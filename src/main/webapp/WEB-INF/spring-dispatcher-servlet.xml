<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
      不能有此项，因为下文有注册过该bean，否则会出现ambiguous报错；
      <context:component-scan base-package="com.tgb.web.controller2"/>
    -->
    <mvc:resources mapping="/resources/**" location="/images/"/>

    <mvc:resources mapping="/resources2/**" location="/css/"/>

    <!--1.获取数据源，配置BasicDataSource-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="url" value = "jdbc:mysql://localhost/db?useUnicode=true&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useSSL=true"></property>
        <property name="username" value="root"></property>
        <property name="password" value="199011081108"></property>
    </bean>

    <!--2.给jdbc模板注入数据源，配置dataSource，使SimpleJdbcTemplate正常工作-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
        <!--也可以代替以：<constructor-arg ref="dataSource" />  -->
    </bean>

    <!--3.给PersonDaoImpl注入模板，装配PersonDaoImpl的jdbcTemplate属性-->
    <bean id="JdbcPersonDao" class="cn.rayest.phonebook.dao.JdbcPersonDao">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>


    <!--激活@Required  @Resource等注解-->
    <context:annotation-config/>

    <!--DispatcherServlet上下文,只搜索@Controller标注的类,不扫描其它类型的bean-->
    <context:component-scan base-package="cn.rayest.phonebook.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven />

    <!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1" />
        <property name="defaultViews">
            <list>
                <!--JSON View-->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">                </bean>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>



</beans>
